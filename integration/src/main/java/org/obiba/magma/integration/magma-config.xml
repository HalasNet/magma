<org.obiba.opal.core.cfg.OpalConfiguration>
  <magmaEngineFactory>
    <extensions>
      <!-- Enbable the JS extension -->
      <org.obiba.magma.js.MagmaJsExtension />
      <!-- Enbable the XStream extension for xml serialisation-->
      <org.obiba.magma.xstream.MagmaXStreamExtension />
    </extensions>

    <factories>
      <!-- Create a HibernateDatasource called "my-datasource" -->
      <org.obiba.magma.datasource.hibernate.support.HibernateDatasourceFactory>
        <name>my-datasource</name>
        <sessionFactoryProvider class="org.obiba.magma.datasource.hibernate.support.LocalSessionFactoryProvider">
          <driver>org.hsqldb.jdbcDriver</driver>
          <baseUrl>jdbc:hsqldb:file:target/integration-hibernate.db;shutdown=true</baseUrl>
          <username>sa</username>
          <password></password>
          <dialect>org.hibernate.dialect.HSQLDialect</dialect>
        </sessionFactoryProvider>
      </org.obiba.magma.datasource.hibernate.support.HibernateDatasourceFactory>
    </factories>
  </magmaEngineFactory>

  <!-- Define tasks, as this is more flexible than a node specific for import -->
  <tasks>
    <org.obiba.opal.tasks.FsDatasourceImport>
      <name>onyx-import</name>
      <loadFrom>/tmp/import</loadFrom>
      <archiveTo>/tmp/archive</archiveTo>
      <datasourceEncryptionStrategy class="org.obiba.opal.crypt.OpalKeystoreDatasourceEncryptionStrategy"/>
      <variableEntityKeyMapper class="org.obiba.opal.core.KeyMapper"/>
      <wrapWith>
        
      </wrapWith>
    </org.obiba.opal.tasks.FsDatasourceImport>
  </tasks>
  
  <view>
    <name>MyView</name>
    <selectClause class="javascript">
      <script>attribute('key').or(attribute('pii')).not()</script>
    </selectClause>
    <fromClause class="valueTableReference">
      <reference>import.Participants</reference>
    </fromClause>
  </view>

  <view>
    <name>CiQuestionnaire</name>
    <selectClause class="javascript">
      <script>attribute('stage').any('CiQuestionnaire').and(name().matches(/.*\.active$/, /.*\.comment$/).not())</script>
    </selectClause>
    <fromClause class="valueTableReference">
      <reference>my-datasource.Participants</reference>
    </fromClause>
  </view>
  
  <view>
    <name>Export</name>
    <whereClause class="filterChain">
      <excludeAll />
      <script type="INCLUDE">
        <javascript><![CDATA[// Include any ValueSet that has 'CLOSED' or 'COMPLETED' as a value for the 'Participant.Interview.Status' variable
          $('Admin.Interview.status').any('CLOSED','COMPLETED')]]></javascript>
      </script>
      <script type="EXCLUDE">
        <javascript><![CDATA[$('Admin.Interview.exportLog.destination').any('DCC')]]></javascript>
      </script>
    </whereClause>
  </view>
  
  
  <lazy>
    <wrapper>
      <name>import-datasource</name>
      <datasourceFactory class="fsDatasource">
        <name>onyx-files</name>
        <directory>${input.filename}</directory>
      </datasourceFactory>
      <views>
        <view>
          <name>Participants</name>
          <select>
            <javascript>
              attribute('key').not()
            </javascript>
          </select>
          <from>
            <table>import.Participants</table>
          </from>
        </view>
      </views>
    </wrapper>
  </lazy>

</org.obiba.opal.core.cfg.OpalConfiguration>